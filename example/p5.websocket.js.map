{"version":3,"sources":["../node_modules/eventemitter3/index.js","socket.js","index.js"],"names":["tryParse","jsonString","data","JSON","parse","ex","window","WS_DEBUG","console","error","WebSocketClient","reconnect_interval","url","instance","WebSocket","self","onopen","log","onclose","evt","code","reconnect","onerror","onmessage","removeAllListeners","setTimeout","open","message","send","stringify","startWebsocket","callback","socketEvents","EventEmitter3","sock","on","emit","removeListener","handleDataString","type","id","Blob","reader","FileReader","onload","result","readAsText","p5","socket","defaultOptions","echo","receiver","controller","serialize","obj","Object","keys","map","key","encodeURIComponent","join","prototype","connectWebsocket","options","config","assign","fullUrl","onConnection","onDisconnection","connectReceived","disconnectReceived","messageReceived","sendMessage"],"mappings":"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AACA,ACvBU,eAAK,YAAL;ADwBV,ACvBYR,YAAAA,YAAY,CAACI,IAAb,CAAkB,YAAlB,EAAgCT,OAAO,CAACa,EAAxC;ADwBZ,ACvBY;ADwBZ;AACA,ACxBU,eAAK,MAAL;ADyBV,ACxBY,gBAAIlC,MAAM,CAACC,QAAX,EACEC,OAAO,CAACS,GAAR,CAAY,+BAAZ,EAA6CU,OAA7C;ADwBd;AACA,ACxBY,gBAAIzB,MAAI,GAAGF,QAAQ,CAAC2B,OAAO,CAACzB,IAAT,CAAnB;ADyBZ;AACA,ACzBY8B,YAAAA,YAAY,CAACI,IAAb,CAAkB,MAAlB,EAA0BlC,MAA1B;AD0BZ,ACzBY;AD0BZ,ACtCQ;ADuCR,ACzBO,OAfD,MAeO;AD0Bb,ACzBQ8B,QAAAA,YAAY,CAACI,IAAb,CAAkB,MAAlB,EAA0BT,OAA1B;AD0BR,ACzBO;AD0BP,ACzBK;AD0BL,ACzBG;AD0BH;AACA,ACzBEO,EAAAA,IAAI,CAACX,SAAL,GAAiB,UAAUrB,IAAV,EAAgB;AD0BnC,ACzBI,QAAIA,IAAI,YAAYuC,IAApB,EAA0B;AD0B9B,ACzBM,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AD0BN;AACA,AC1BMD,MAAAA,MAAM,CAACE,MAAP,GAAgB,YAAY;AD2BlC,AC1BQN,QAAAA,gBAAgB,CAACI,MAAM,CAACG,MAAR,CAAhB;AD2BR,AC1BO,OAFD;AD6BN;AACA,AC3BMH,MAAAA,MAAM,CAACI,UAAP,CAAkB5C,IAAlB;AD4BN,AC3BK,KAND,MAMO,IAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AD4BxC,AC3BMoC,MAAAA,gBAAgB,CAACpC,IAAD,CAAhB;AD4BN,AC3BK;AD4BL,AC3BG,GAVD;ADsCF;AACA,AC3BE,SAAO8B,YAAP;AD4BF,AC3BC,CA/DM;AD2FP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"p5.websocket.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import EventEmitter3 from \"eventemitter3\";\n\nfunction tryParse(jsonString) {\n  try {\n    const data = JSON.parse(jsonString);\n    return data;\n  } catch (ex) {\n    if (window.WS_DEBUG) {\n      console.error(\n        \"[p5.websocket error] failed to parse data blob as JSON:\",\n        data\n      );\n    }\n    return jsonString;\n  }\n}\n\nclass WebSocketClient {\n  constructor() {\n    this.reconnect_interval = 1500;\n  }\n\n  open(url) {\n    this.url = url;\n    this.instance = new WebSocket(this.url);\n\n    var self = this;\n\n    this.instance.onopen = function () {\n      if (window.WS_DEBUG) console.log(\"[WebSocketClient on open]\");\n      self.onopen();\n    };\n\n    this.instance.onclose = function (evt) {\n      if (window.WS_DEBUG) console.log(\"[WebSocketClient on close]\");\n      switch (evt.code) {\n        case 1000: // CLOSE_NORMAL\n          if (window.WS_DEBUG) console.log(\"WebSocketClient: closed\");\n          break;\n        default:\n          // Abnormal closure\n          self.reconnect(evt);\n          break;\n      }\n      if (self.onclose) self.onclose(evt);\n    };\n\n    this.instance.onerror = function (evt) {\n      if (window.WS_DEBUG) console.log(\"[WebSocketClient on error]\");\n      switch (evt.code) {\n        case \"ECONNREFUSED\":\n          self.reconnect(evt);\n          break;\n        default:\n          if (self.onerror) self.onerror(evt);\n          break;\n      }\n    };\n\n    this.instance.onmessage = function (evt) {\n      if (window.WS_DEBUG) console.log(\"[WebSocketClient on message]\");\n      self.onmessage(evt.data);\n    };\n\n    if (window.WS_DEBUG) console.log(\"[WebSocketClient open] completed\");\n  }\n\n  removeAllListeners() {\n    this.instance.onopen = null;\n    this.instance.onclose = null;\n    this.instance.onerror = null;\n    this.instance.onmessage = null;\n  }\n\n  reconnect() {\n    if (window.WS_DEBUG)\n      console.log(\n        \"WebSocketClient: retry in\",\n        this.reconnect_interval,\n        \"ms\",\n        evt\n      );\n    this.removeAllListeners();\n\n    var self = this;\n    setTimeout(function () {\n      if (window.WS_DEBUG) console.log(\"WebSocketClient: reconnecting...\");\n      self.open(self.url);\n    }, this.reconnect_interval);\n  }\n\n  send(message) {\n    if (typeof message === \"string\") {\n      this.instance.send(message);\n    } else {\n      this.instance.send(JSON.stringify(message));\n    }\n  }\n}\n\nexport const startWebsocket = (url, callback) => {\n  const socketEvents = new EventEmitter3();\n  const sock = new WebSocketClient(socketEvents);\n\n  sock.open(url);\n\n  function send(message) {\n    sock.send(message);\n  }\n\n  sock.onopen = function () {\n    if (window.WS_DEBUG) console.log(\"socket connected\");\n    socketEvents.on(\"send\", send);\n    socketEvents.emit(\"onopen\");\n  };\n\n  sock.onclose = function () {\n    if (window.WS_DEBUG) console.log(\"socket closed\");\n    socketEvents.removeListener(\"send\", send);\n    socketEvents.emit(\"onclose\");\n  };\n  sock.onerror = sock.onclose;\n\n  function handleDataString(data) {\n    var message = JSON.parse(data);\n\n    if (callback) {\n      callback(message);\n    } else {\n      if (message.type) {\n        switch (message.type) {\n          case \"connect\":\n            socketEvents.emit(\"connect\", message.id);\n            break;\n          case \"disconnect\":\n            socketEvents.emit(\"disconnect\", message.id);\n            break;\n          case \"data\":\n            if (window.WS_DEBUG)\n              console.log(\"[p5.websocket] receiving data\", message);\n            let data = tryParse(message.data);\n            socketEvents.emit(\"data\", data);\n            break;\n        }\n      } else {\n        socketEvents.emit(\"data\", message);\n      }\n    }\n  }\n\n  sock.onmessage = function (data) {\n    if (data instanceof Blob) {\n      var reader = new FileReader();\n      reader.onload = function () {\n        handleDataString(reader.result);\n      };\n      reader.readAsText(data);\n    } else if (typeof data == \"string\") {\n      handleDataString(data);\n    }\n  };\n\n  return socketEvents;\n};\n","import { startWebsocket } from \"./socket\";\n\nwindow.WS_DEBUG = false;\n\nconst p5 = window.p5;\nlet socket = null;\n\nconst defaultOptions = {\n  echo: true,\n  receiver: true,\n  controller: true,\n};\n\nconst serialize = (obj) => {\n  return Object.keys(obj)\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]))\n    .join(\"&\");\n};\n\np5.prototype.connectWebsocket = function (url, options = {}) {\n  const config = Object.assign({}, defaultOptions, options);\n  const fullUrl = url + \"?\" + serialize(config);\n\n  socket = startWebsocket(fullUrl);\n\n  // console.log(\"CONNECTING WEBSOCKET WITH LOCAL THIS\", this);\n  // console.log(\n  //   \"can see methods from sketch here\",\n  //   this.hasOwnProperty(\"onConnection\"),\n  //   this.onConnection,\n  //   window.onConnection\n  // );\n\n  // this client's connection\n  socket.on(\"onopen\", () => {\n    if (window.onConnection) {\n      onConnection();\n    }\n  });\n\n  // this client's connection\n  socket.on(\"onclose\", () => {\n    if (window.onDisconnection) {\n      onDisconnection();\n    }\n  });\n\n  // other clients' connections\n  socket.on(\"connect\", (message) => {\n    if (window.connectReceived) {\n      connectReceived(message);\n    }\n  });\n\n  socket.on(\"disconnect\", (message) => {\n    if (window.disconnectReceived) {\n      disconnectReceived(message);\n    }\n  });\n\n  socket.on(\"data\", (message) => {\n    if (window.messageReceived) {\n      messageReceived(message);\n    }\n  });\n};\n\np5.prototype.sendMessage = (message) => {\n  if (socket) {\n    if (window.WS_DEBUG) console.log(\"sendin\", message);\n    socket.emit(\"send\", message);\n  }\n};\n"]}